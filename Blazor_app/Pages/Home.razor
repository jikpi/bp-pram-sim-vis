@page "/"
@using Blazor_app.Services
@using PRAM_lib.Machine
@using PRAM_lib.Memory
@inject PramMachine pramMachine
@inject GlobalService globalService
@inject ExecutionService execService
@inject CodeEditorService codeEditorService

<PageTitle>PRAM Simulator</PageTitle>

<style>



</style>

<Blazor_app.Components.CommonControls />



<div class="container my-2 mt-2">
    <div class="row">
        <div class="col">

            @if (codeEditorService.EditMode)
            {
                <div class="container mb-2 mx-3">
                    <button @onclick="codeEditorService.CancelEditMode" class="btn btn-danger">Cancel</button>
                    <button @onclick="CompileCode" class="btn btn-primary me-2">Compile</button>
                </div>
            }
            else
            {
                <div class="container mb-2 mx-3">
                    <button @onclick="EditCode" class="btn btn-secondary">Edit</button>
                </div>
            }

            <Blazor_app.Components.CodeEditor />
        </div>
        <div class="col">
            <div class="text-center">
                <h4>Input</h4>
            </div>

            <div class="text-center my-1">
                <button class="btn btn-secondary" @onclick="ClearInputMemory">Clear</button>
            </div>

            <Blazor_app.Components.Memory.AnyMemory MemoryItems="@execService.GetMemoryContextInput()" />
            <div class="text-center">
                <button class="btn btn-light" @onclick="AddInputCell">➕</button>
            </div>
        </div>
        <div class="col">
            <div class="text-center">
                <h4>Shared Memory</h4>
            </div>

            <div class="text-center my-1">
                <button class="btn btn-secondary" @onclick="ClearSharedMemory">Clear</button>
            </div>
            <Blazor_app.Components.Memory.AnyMemory MemoryItems="@execService.GetMemoryContextShared()" />
            <div class="text-center">
                <button class="btn btn-light" @onclick="AddSharedMemoryCell">➕</button>
            </div>
        </div>
        <div class="col">
            <div class="text-center">
                <h4>Output</h4>
            </div>

            <div class="text-center">
                <button class="btn btn-secondary my-1" @onclick="ClearOutputMemory">Clear</button>
            </div>
            <Blazor_app.Components.Memory.AnyMemory MemoryItems="@execService.GetMemoryContextOutput()" />
        </div>
    </div>
</div>

<button class="btn btn-primary" @onclick="testAdd">Test Set / Crash</button>
<button class="btn btn-primary" @onclick="AddTestCode">Add test code</button>



@code {

    protected override void OnInitialized()
    {
        base.OnInitialized();
        SubscribeToEvents();
    }

    private void SubscribeToEvents()
    {
        execService.MemoryRefreshed += MemorySourcesRefreshed;
    }

    public void MemorySourcesRefreshed()
    {
        StateHasChanged();
    }

    private void AddSharedMemoryCell()
    {
        pramMachine.GetSharedMemory().Add(new MemoryCell());
    }

    private void AddInputCell()
    {
        pramMachine.GetInputMemory().Add(new MemoryCell());
    }

    private void testAdd()
    {
        pramMachine.GetSharedMemory()[2].Value = 5000;
        execService.RefreshMemory();
    }

    private void CompileCode()
    {
        execService.CompileCode();
    }

    private void EditCode()
    {
        codeEditorService.EditCode();
        StateHasChanged();
    }

    private void ClearInputMemory()
    {
        pramMachine.GetInputMemory().Clear();
    }

    private void ClearSharedMemory()
    {
        pramMachine.GetSharedMemory().Clear();
    }

    private void ClearOutputMemory()
    {
        pramMachine.GetOutputMemory().Clear();
    }

    private void AddTestCode()
    {
        codeEditorService.ChangeCode(globalService.TestedCode);
    }

    public void Dispose()
    {
        execService.MemoryRefreshed -= MemorySourcesRefreshed;
    }
}