@page "/"
@using Blazor_app.Services
@using PRAM_lib.Machine
@using PRAM_lib.Memory
@inject PramMachine pramMachine
@inject RefreshService refreshService
@inject CodeEditorService codeEditorService

<PageTitle>Home</PageTitle>

<style>

    .overlay_popup {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 999;
    }

    .popup {
        position: fixed;
        background-color: white;
        border: 1px solid #ddd;
        padding: 20px;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1000;
    }

</style>

<h1>PRAM Simulator App</h1>

<div class="container">
    <div class="row">
        <div class="col">
            <Blazor_app.Components.CodeEditor />
        </div>
        <div class="col">
            <Blazor_app.Components.Memory.AnyMemory MemoryItems="@pramMachine.GetInputMemory()" />
            <div class="text-center">
                <button class="btn btn-primary" @onclick="AddCell">Add Cell</button>
            </div>
        </div>
        <div class="col">
            <Blazor_app.Components.Memory.AnyMemory MemoryItems="@pramMachine.GetSharedMemory()" />
            <div class="text-center">
                <button class="btn btn-primary" @onclick="AddCell">Add Cell</button>
            </div>
        </div>
        <div class="col">
            <Blazor_app.Components.Memory.AnyMemory MemoryItems="@pramMachine.GetOutputMemory()" />
            <div class="text-center">
                <button class="btn btn-primary" @onclick="AddCell">Add Cell</button>
            </div>
        </div>
    </div>
</div>

<button class="btn btn-primary" @onclick="testAdd">Test Set</button>
<button class="btn btn-primary" @onclick="Compile">Compile</button>
<button class="btn btn-primary" @onclick="NextExecutionStep">Next Execution Step</button>

@if (showPopup)
{
    <div class="overlay_popup"></div>
    <div class="popup">
        <div class="text-center font-weight-bold mb-2">
            <span>Exception:</span>
        </div>
        <div class="text-center mb-2">
            <span>@popupMessage</span>
        </div>
        <div class="text-center mt-2">
            <button class="btn btn-primary" @onclick="ClosePopup">Close</button>
        </div>
    </div>
}



@code {
    private bool showPopup = false;
    private string popupMessage = "";
    private void ShowPopup(string message)
    {
        popupMessage = message;
        showPopup = true;
    }

    private void ClosePopup()
    {
        showPopup = false;
    }

    private void AddCell()
    {
        pramMachine.GetSharedMemory().Add(new MemoryCell());
        pramMachine.GetInputMemory().Add(new MemoryCell());
        pramMachine.GetOutputMemory().Add(new MemoryCell());
    }

    private void testAdd()
    {
        pramMachine.GetSharedMemory()[2].Value = 5000;
        refreshService.RefreshMemory();
    }

    private void Compile()
    {

        codeEditorService.Save();
        pramMachine.Compile(codeEditorService.Code);

        if (pramMachine.IsCompiled)
        {
            ShowPopup("Compilation successful");
        }
        else
        {
            ShowPopup($"Compilation failed: {pramMachine.CompilationErrorMessage}");
        }


    }

    private void NextExecutionStep()
    {
        bool result = pramMachine.ExecuteNextInstruction();
        if (!result)
        {
            ShowPopup(pramMachine.ExecutionErrorMessage);
        }
    }
}